%global advanced_branch		1
%global svnrev			1582

%{!?release_func:%global release_func() %1}

Summary:	A lightweight RPC library based on XML and HTTP
Name:		xmlrpc-c
Version:	1.16.6
Release:	%release_func 3.%svnrev
# See COPYING for details.
# The Python 1.5.2 license used by a few files is just BSD.
License:	BSD and MIT
Group:		System/Libraries
URL:	 	http://xmlrpc-c.sourceforge.net/
%{!?advanced_branch:Source0:	http://dl.sourceforge.net/sourceforge/xmlrpc-c/xmlrpc-%version.tgz}
# generated by 'make svn-sources [SVN_VER=%version SVN_REV=%svnrev]'. Unfortunately,
# upstream does not tag versions so we must fetch from the branch and
# check which version was used for it
%{?advanced_branch:Source0:	xmlrpc-c-%version.tar.bz2}
Patch100:	xmlrpc-c-cmake.patch
Patch102:	xmlrpc-c-printf-size_t.patch
Patch105:	xmlrpc-c-longlong.patch
Patch106:	xmlrpc-c-va_list.patch


BuildRoot:	%_tmppath/%name-%version-%release-root
BuildRequires:	cmake
BuildRequires:	curl-devel libxml2-devel

%package c++
Summary:	C++ libraries for xmlrpc-c
Group:		System/Libraries
Requires:	%name = %version-%release

%package client
Summary:	C client libraries for xmlrpc-c
Group:		System/Libraries
Requires:	%name = %version-%release

%package client++
Summary:	C++ client libraries for xmlrpc-c
Group:		System/Libraries
Requires:	%name = %version-%release

%package devel
Summary:	Development files for xmlrpc-c based programs
Group:		Development/Libraries
Requires:	%name = %version-%release
Requires:	%name-c++ = %version-%release
Requires:	libxml2-devel curl-devel
Requires:	pkgconfig

%package apps
Summary:	Sample XML-RPC applications
Group:		Applications/Internet


%description
XML-RPC is a quick-and-easy way to make procedure calls over the
Internet. It converts the procedure call into XML document, sends it
to a remote server using HTTP, and gets back the response as XML.

This library provides a modular implementation of XML-RPC for C.


%description c++
XML-RPC is a quick-and-easy way to make procedure calls over the
Internet. It converts the procedure call into XML document, sends it
to a remote server using HTTP, and gets back the response as XML.

This library provides a modular implementation of XML-RPC for C++.


%description client
XML-RPC is a quick-and-easy way to make procedure calls over the
Internet. It converts the procedure call into XML document, sends it
to a remote server using HTTP, and gets back the response as XML.

This library provides a modular implementation of XML-RPC for C
clients.

%description client++
XML-RPC is a quick-and-easy way to make procedure calls over the
Internet. It converts the procedure call into XML document, sends it
to a remote server using HTTP, and gets back the response as XML.

This library provides a modular implementation of XML-RPC for C++
clients.


%description devel
Static libraries and header files for writing XML-RPC applications in
C and C++.


%description apps
XML-RPC is a quick-and-easy way to make procedure calls over the
Internet. It converts the procedure call into XML document, sends it
to a remote server using HTTP, and gets back the response as XML.

This package contains some handy XML-RPC demo applications.


%prep
%setup -q
%patch100 -p1
%patch102 -p1
%patch105 -p1
%patch106 -p1

## not needed...
rm doc/{INSTALL,configure_doc}


%build
mkdir -p fedora
cd fedora
export CFLAGS="$RPM_OPT_FLAGS"
export CXXFLAGS="$RPM_OPT_FLAGS"
cmake .. \
	-D_lib:STRING=%_lib			\
	-DMUST_BUILD_CURL_CLIENT:BOOL=ON	\
	-DMUST_BUILD_LIBWWW_CLIENT:BOOL=OFF	\
        -DCMAKE_INSTALL_PREFIX:PATH=%_prefix	\
        -DBUILD_SHARED_LIBS:BOOL=ON
make VERBOSE=1 %{?_smp_mflags}


%install
rm -rf $RPM_BUILD_ROOT
cd fedora
make install DESTDIR=$RPM_BUILD_ROOT

chmod +x $RPM_BUILD_ROOT%_libdir/*.so


%check
unset PKG_CONFIG_PATH
export PKG_CONFIG_LIBDIR=$RPM_BUILD_ROOT%_libdir/pkgconfig:%_libdir/pkgconfig:%_datadir/pkgconfig
PATH=$RPM_BUILD_ROOT%_bindir:$PATH

for comp in c++ cgi-server server-util abyss-server client libwww-client; do
	for opt in '--version' '--libs' 'c++2 --libs' 'c++ --libs --static'; do
		xmlrpc-c-config "$comp" $opt
	done
done


%clean
rm -rf $RPM_BUILD_ROOT


%post   -p /sbin/ldconfig
%postun -p /sbin/ldconfig

%post client   -p /sbin/ldconfig
%postun client -p /sbin/ldconfig

%post c++   -p /sbin/ldconfig
%postun c++ -p /sbin/ldconfig

%post client++   -p /sbin/ldconfig
%postun client++ -p /sbin/ldconfig



%files
%defattr(-,root,root,-)
%doc doc/*
%_libdir/*.so.3*
%exclude %_libdir/libxmlrpc_client.so*


%files client
%defattr(-,root,root,-)
%_libdir/libxmlrpc_client.so.*


%files c++
%defattr(-,root,root,-)
%_libdir/*.so.4*
%exclude %_libdir/libxmlrpc_client++.so*


%files client++
%defattr(-,root,root,-)
%_libdir/libxmlrpc_client++.so.*


%files devel
%defattr(-,root,root,-)
%_bindir/xmlrpc-c-config
%_includedir/xmlrpc-c
%_includedir/*.h
%_libdir/pkgconfig/*.pc
%_libdir/*.so


%files apps
%defattr(-,root,root,-)
%doc tools/xmlrpc/xmlrpc.html
%doc tools/xmlrpc_transport/xmlrpc_transport.html
%_mandir/man1/*
%_bindir/xmlrpc
%_bindir/xmlrpc_transport
%_bindir/xml-rpc-api2cpp
%_bindir/xmlrpc_cpp_proxy


